<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot_ssm_demo.mapper.BookMapper">

    <!-- 通用查询映射结果  数组结果 -->
    <resultMap id="BaseResultMap" type="com.example.springboot_ssm_demo.model.Books">
        <id column="bookID" property="bookID" />
        <result column="bookName" property="bookName" />
        <result column="bookCounts" property="bookCounts" />
        <result column="detail" property="detail" />
    </resultMap>
    <!--查询全部书-->
    <select id="getAllBook" resultMap="BaseResultMap">
        select * from ssmbuild.books
    </select>

    <!--  精确查询  -->
    <!--根据书名查询,返回一本书  一个对象  -->
    <select id="findBookByName" resultType="com.example.springboot_ssm_demo.model.Books">
        select * from  ssmbuild.books where bookName=#{bookName}
    </select>

    <!--  精确查询  -->
    <!--根据书本 id 查询,返回一本书  一个对象  -->
    <select id="findBookById" resultType="com.example.springboot_ssm_demo.model.Books">
        select * from  ssmbuild.books where bookID=#{bookID}
    </select>

    <!--  模糊查询  -->
    <!--根据书名查询,返回所书-->
    <select id="findAllByNameLike" resultMap="BaseResultMap">
        select * from  ssmbuild.books where bookName like '%${bookName}%'
    </select>

    <!--增加一本书-->
    <insert id="addBook" parameterType="com.example.springboot_ssm_demo.model.Books">
        insert into ssmbuild.books (bookName,bookCounts,detail)
        values (#{bookName},#{bookCounts},#{detail});
    </insert>

    <!--根据id删除一本书-->
    <delete id="deleteBookById" parameterType="com.example.springboot_ssm_demo.model.Books">
       delete from ssmbuild.books where bookID=#{bookId}
    </delete>

    <!--更新书，根据id更新书籍信息 -->
    <update id="updateBook" parameterType="com.example.springboot_ssm_demo.model.Books">
        update ssmbuild.books
        set bookName=#{bookName},bookCounts=#{bookCounts},detail=#{detail}
        where bookID=#{bookID};
    </update>

</mapper>
